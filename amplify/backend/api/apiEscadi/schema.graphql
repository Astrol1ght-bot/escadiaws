# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
#input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Student 
    @model
    @auth(rules: [
        {allow: groups, groups: ["Admins"], operations: [create, update, delete]}
        {allow: private, operations: [read, create, update, delete]}
        {allow: public, operations: [read]}
    ])
{
    id: ID!
    enrollments: [Enrollment] @hasMany 
}


type Course 
    @model
    @auth(rules: [
        {allow: groups, groups: ["Admins"], operations: [create, update, delete]}
        {allow: private, operations: [read]}
        {allow: public, operations: [read]}
        ])
{
    id: ID!
    name: String!
    thumbnail: AWSURL!
    description: String
    price: Float!
    professor: Professor
    keyfile: String
    enrollment: [Enrollment] @manyToMany(relationName: "CourseEnrollments")
}




type Professor
    @model
    @auth(rules: [
        {allow: owner, ownerField: "id", operations: [update]}
        {allow: groups, groups: ["Admins"], operations: [create, update, delete]}
        {allow: private, operations: [read]}
    ])
{
    id: ID!
    name: String!
    courses: [Course] @hasMany
}



type Enrollment
    @model
    @auth(rules: [
        {allow: groups, groups: ["Admins"], operations: [create, update, delete]}
        {allow: private, operations: [read, create, update]}
    ])
{
    id: ID!
    student: Student @belongsTo
    course: [Course] @manyToMany(relationName: "CourseEnrollments")
    enrollDetails: EnrollDetails!
    status: EnrollmentStatus!
    date: AWSDateTime!
    filekey: String!
}

type EnrollDetails {
    courseID: String!
    courseName: String!
    thumbnail: AWSURL!
    courseKeyFIle: String!
    total: String!
}


enum EnrollmentStatus {
    pendiente
    aprobado
    rechazado
}